name: Playwright Tests
on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  test-api:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        shard: [1, 2, 3, 4]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - name: Install dependencies
        run: npm install -g pnpm && pnpm install
      - name: Install Playwright Browsers
        run: pnpm exec playwright install --with-deps
      - name: Run Playwright tests
        run: pnpm exec playwright test --shard ${{matrix.shard}} --grep @api
        env:
          BASE_URL: https://automationintesting.online/
          DEV_EMAIL: devkuku@sample-no.com
          PASSWORD: dev_spearcad
          DEVNAME: "Dev Kuku"
          CI: true

          # Create a folder called blob-report  to put all the reports
      - uses: actions/upload-artifact@v4
        name: Upload blob report to github actions artifacts
        if: always()
        with:
          name: blob-report-${{matrix.shard}}
          path: all-blobs-report
          retention-days: 14
          overwrite: true

  merge-reports-and-upload:
    permissions:
      contents: write
    if: always()
    needs: [test-api]
    runs-on: ubuntu-latest

    outputs:
      timestamp: ${{ steps.timestampid.outputs.timestamp }}

    steps:
      # Set a timestamp for identity
      - name: Set a timestamp
        id: timestampid
        run: echo "timestamp=$(date --utc +%Y%m%d_%H%M%SZ)" >> "$GITHUB_OUTPUT"

      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - name: Install dependencies
        run: npm install -g pnpm && pnpm install

      # Download the reports uploaded previously
      - name: Download blob reports from Github Actions Artifacts
        uses: actions/download-artifact@v4
        with:
          path: playwright-report/
          pattern: blob-report-*
          merge-multiple: true

      - name: List downloaded reports
        run: |
          ls -la playwright-report
          find playwright-report -type f -name 'blob-report-*' -print

      # Merge the blobs into one single HTML report
      - name: Merge the blobs into one single HTML report
        run: |
          ls -la playwright-report
          pnpm exec playwright merge-reports --reporter html playwright-report
          if [ $? -ne 0 ]; then
            echo "Error merging reports"
            exit 1
          fi
      # Upload full HTML report to artifacts for history
      - name: Upload full HTML report to artifacts for history
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-${{ steps.timestampid.outputs.timestamp }}
          path: playwright-report/
          retention-days: 14

      # Push the new files to GitHub Pages
      - name: Push the new files to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./playwright-report
          destination_dir: ${{ steps.timestampid.outputs.timestamp }}

      # Write URL in Summary
      - name: Write URL in Summary
        run: echo "### Test results (link available after 20 secs) - https://${{ github.repository_owner }}.github.io/playwright-example-with-typescript/${{ steps.timestampid.outputs.timestamp }}/" >> $GITHUB_STEP_SUMMARY
